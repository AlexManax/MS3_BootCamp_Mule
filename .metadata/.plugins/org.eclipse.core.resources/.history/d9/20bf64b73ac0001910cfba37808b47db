<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <http:listener-config name="accounts-api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="accounts-api-config" raml="accounts-api.raml" consoleEnabled="false" doc:name="Router"/>
    <db:mysql-config name="MySQL_Configuration" host="mudb.mulesoft-training.com" port="3306" user="mule" password="mule" database="training" doc:name="MySQL Configuration"/>
    <flow name="accounts-api-main">
        <http:listener config-ref="accounts-api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="accounts-api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="accounts-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="accounts-api-console">
        <http:listener config-ref="accounts-api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="accounts-api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="get:/accounts:accounts-api-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM flights_customers]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message" metadata:id="67c12d5b-ffb7-4fc9-a51c-8a5c7193d421">
            <dw:input-payload doc:sample="sample_data/list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((account , index) -> {
	id: account.accountID,
	firstName: ((account.name default "") splitBy (' '))[0],
	lastName: ((account.name default "") splitBy (' '))[1],
	address: account.street ++ ', ' ++ account.city ++ ', ' ++ account.state,
	postal: account.postal,
	country: account.country,
	creationDate: account.creationDate as :string,
	accountType: account.accountType,
	miles: account.miles

})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="post:/accounts:application/json:accounts-api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="{
&quot;message&quot; : &quot;Error creating accounts. Please check the JSON object and make sure it's valid.&quot;
}" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/accounts/{id}:application/json:accounts-api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="{
&quot;message&quot; : &quot;account replaced (but not really)&quot;
}" doc:name="Set Payload"/>
    </flow>
    <flow name="delete:/accounts/{id}:application/json:accounts-api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="{
&quot;message&quot; : &quot;account deleted (but not really)&quot;
}" doc:name="Set Payload"/>
    </flow>
    <flow name="patch:/accounts/{id}:application/json:accounts-api-config">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="{
&quot;message&quot; : &quot;account modified (but not really)&quot;
}" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/accounts/{id}:accounts-api-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM flights_customers WHERE ID=1]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Copy_of_Transform Message" metadata:id="67c12d5b-ffb7-4fc9-a51c-8a5c7193d421">
            <dw:input-payload doc:sample="sample_data/list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((account , index) -> {
	id: account.accountID,
	firstName: ((account.name default "") splitBy (' '))[0],
	lastName: ((account.name default "") splitBy (' '))[1],
	address: account.street ++ ', ' ++ account.city ++ ', ' ++ account.state,
	postal: account.postal,
	country: account.country,
	creationDate: account.creationDate as :string,
	accountType: account.accountType,
	miles: account.miles

})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <apikit:mapping-exception-strategy name="accounts-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
